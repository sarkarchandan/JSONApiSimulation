/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.4.1/userguide/java_library_plugin.html
 */


// Apply the java-library plugin to add support for Java Library
apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'idea'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    jcenter()
}

//Specifying the Web Archive name.
war{
	archiveName 'server.war'
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'
    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:20.0'
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
    compile 'javax.ws.rs:jsr311-api:+'
    compile 'org.glassfish.jersey.containers:jersey-container-servlet:+'
    providedCompile 'javax:javaee-api:7.0'
}


//Undeploy the Web Archive from the Glassfish application server.
task undeploy(type:Exec) {
    // ignore if not deployed yet
    ignoreExitValue true
    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        commandLine 'cmd', '/c', 'asadmin.bat', 'undeploy', 'server'
    } else {
        commandLine  'asadmin', 'undeploy', 'server'
    }
}



//Deploy the Web Arcive to the Glassfish application server.
task deploy(type:Exec) {
    if (System.properties['os.name'].toLowerCase().contains('windows')) {
        commandLine 'cmd', '/c', 'asadmin.bat', 'deploy', '--contextroot', '/', 'build/libs/server.war'
    } else {
        commandLine  'asadmin', 'deploy', '--contextroot', '/server', 'build/libs/server.war'
    }
}










 




















